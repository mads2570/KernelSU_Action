version: 2.1
executors:
  ubuntu-executor:
    docker:
      - image: cimg/base:stable
    working_directory: ~/project
jobs:
  build-kernel:
    executor: ubuntu-executor
    steps:
      - checkout
      - run:
          name: Installing Dependencies
          command: |
            sudo apt update -y
            sudo apt-get install -y lld binutils clang llvm zip flex bison libncurses-dev gawk libiberty-dev autoconf kmod bc build-essential gcc libc6 curl libstdc++6 git wget libssl-dev cpio p7zip-full ccache
            sudo apt clean
      - run:
          name: Build Kernel
          working_directory: kernel-source
          command: |
            CLANG="$HOME/project/aosp-clang/clang/bin"
            GCC64="$HOME/project/aosp-clang/aarch64-linux-android-4.9/bin"
            PATH=$CLANG:$GCC64:$PATH
            export PATH
            export ARCH=arm64
            export CLANG_TRIPLE=aarch64-linux-gnu-
            export KERNEL_MAKE_ENV="DTC_EXT=$(pwd)/tools/dtc CONFIG_BUILD_ARM64_DT_OVERLAY=y"
            output_dir=out
            date=$(date +"%Y%m%d%H%M")
            export PATH="/usr/lib/ccache:$PATH"
            echo "date=$date"
            echo "Building kernel with $args"
            make -C $(pwd) O=out $KERNEL_MAKE_ENV CC="ccache clang" LLVM=1 LLVM_IAS=1 vendor/m23xq_eur_open_defconfig && make O=out $KERNEL_MAKE_ENV CC="ccache clang" LLVM=1 LLVM_IAS=1 -j$(grep -c ^processor /proc/cpuinfo)
            ./tools/mkdtimg create out/arch/arm64/boot/dtbo.img --page_size=4096 $(find out/arch/arm64/boot/dts/samsung/m23/m23xq/ -name *.dtbo)
      - store_artifacts:
          path: kernel-source/out/arch/arm64/boot
          destination: kernel-artifacts
workflows:
  build_kernel_workflow:
    jobs:
      - build-kernel